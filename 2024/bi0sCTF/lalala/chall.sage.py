

# This file was *autogenerated* from the file chall.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_39 = Integer(39); _sage_const_40 = Integer(40); _sage_const_1024 = Integer(1024); _sage_const_0 = Integer(0); _sage_const_32 = Integer(32); _sage_const_10 = Integer(10); _sage_const_1000 = Integer(1000); _sage_const_1 = Integer(1); _sage_const_100 = Integer(100); _sage_const_9 = Integer(9); _sage_const_3 = Integer(3)
from random import randint
from re import search

flag = "bi0sctf{%s}" % f"{randint(_sage_const_2 **_sage_const_39 , _sage_const_2 **_sage_const_40 ):x}"

p = random_prime(_sage_const_2 **_sage_const_1024 )
unknowns = [randint(_sage_const_0 , _sage_const_2 **_sage_const_32 ) for _ in range(_sage_const_10 )]
unknowns = [f + i - (i%_sage_const_1000 )  for i, f in zip(unknowns, search("{(.*)}", flag).group(_sage_const_1 ).encode())]
print(unknowns)

output = []
for _ in range(_sage_const_100 ):
    aa = [randint(_sage_const_0 , _sage_const_2 **_sage_const_1024 ) for _ in range(_sage_const_1000 )]
    bb = [randint(_sage_const_0 , _sage_const_9 ) for _ in range(_sage_const_1000 )]
    cc = [randint(_sage_const_0 , _sage_const_9 ) for _ in range(_sage_const_1000 )]
    output.append(aa)
    output.append(bb)
    output.append(cc)
    output.append(sum([a + unknowns[b]**_sage_const_2  * unknowns[c]**_sage_const_3  for a, b, c in zip(aa, bb, cc)]) % p)

print(f"{p = }")
print(f"{output = }")

