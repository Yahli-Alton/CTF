from Crypto.Util.number import *
from flag import flag

def next_prime(r):
	while True:
		if isPrime(r):
			return r
		r += 1

def keygen(nbit):
	p = getPrime(nbit // 2)
	a = getPrime(nbit // 2 - 10)
	c = getPrime(nbit // 2 - 10)
	print(f'p = {p}')
	print(f'a = {a}')
	print(f'b = {next_prime(p * a) - p * a}')
	print(f'c = {c}')
	print(f'd = {next_prime(p * c) - p * c}')
	P, Q = [next_prime(p * a), next_prime(p * c)]
	n, K = P * Q, 2 ** (nbit >> 1)
	u, y = getRandomRange(1, n), getRandomRange(1, K)
	v = - (p + u * y) % n

	pkey = (u, v, n)
	skey = (y, P, Q)

	return pkey, skey

def encrypt(msg, pkey):
	u, v, n = pkey
	m = bytes_to_long(msg)
	assert m < n
	m0 = (u*m - v) % n
	while True:
		if isPrime(u + v):
			break
		else:
			u += 1
	e = u + v
	print(f'e = {e}')
	c = pow(m0, e, n)
	return c

nbit = 1024
pkey, skey = keygen(nbit)
u, v, n = pkey
# u = 1462429177173255359388007765931796537885368646963625242711326952977985471932962383861842635724040143033586225507124897993946275538644782337485276659791768803892242293535522679957964876776825548307042572518152706215000123872096447939862588392736653305289270336986724756913886373602016050815040147667630379593859685646307913471020561969933852495456652645591262189417744078633139731004839760821762709078987432999550663454348821414654652257866073987807333618308663409376712742627162896125313056171829232263020741802783450992451834392620606043876037571745527804406103083287186596413204262417693475997360716169601004
# v = 3361480002432693752626969088049143371033687796839032797315025143270946165139685061767026950394284498430926616845318237749712235930625309923903553850166793512181385788796869552215035455995370731816925378753732950039662516557875218374075823193808692392905081204067496016151667029418998917540743277631790419809752354652686500452367372802836483170592925224959479584778030250914074383997961924181706306681930041686426001864642557173165132110893305941080323382987813126090590272821376238345672517574935462126595211630982601294558596563972548400634497302430346025087052735168147932593694561898028225523940866874133379
# n = 4008883280270490147018156798752367239459738170301430156348460445088206527048348763760917689680659443318901951360516237262067529304338022837630483645196033621304254000080347982506422415455884933061116059048068199094286198189562171954474774550333796393036361152513608385296841124457358944339309759412021626022854509621495881349117414093445491445654319715891479654096144019797840785614103437600093538599616479514552612464205903106999476721076731416925688036797972413175747167321276835717505959961674004440955460813234396658192578904514644322909786797887720838286121169342271751904104529587650648676532260230880251
pkey = u, v, n

c = encrypt(flag, pkey)

print(f'u = {u}')
print(f'v = {v}')
print(f'n = {n}')
# print(f'c = {c}')